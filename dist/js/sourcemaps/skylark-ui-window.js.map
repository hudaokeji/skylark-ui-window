{"version":3,"sources":["skylark-ui-window.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","interact","noder","datax","geom","eventer","styler","_place","node","choices","layoutNode","aroundNodeCoords","doc","ownerDoc","win","ownerWindow","view","size","left","top","parentNode","String","tagName","toLowerCase","body","appendChild","best","some","choice","corner","pos","overflow","spaceAvailable","w","L","width","x","R","M","charAt","h","T","height","y","B","res","aroundCorner","bb","startXpos","Math","max","min","startYpos","startX","startY","endX","endY","boundingPosition","at","corners","padding","c","reverse","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","position","test","anchorBorder","getBorderExtents","anchorChildBorder","firstChild","t","l","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","getComputedStyle","parent","nodeType","nodeName","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","array","ltr","movable","elm","params","updateWithTouchData","e","keys","changedTouches","overlayDiv","downButton","start","stop","originalPos","handleEl","handle","auto","constraints","document","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","getDocumentSize","preventDefault","button","screenX","screenY","relativePosition","css","createElement","zIndex","opacity","append","on","move","deltaX","deltaY","minX","maxX","minY","maxY","off","remove","mover","attr","removeAttr","pagePosition","addClass","Array","prototype","mixin","browser","$","widgets","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isShiftHeld","shiftKey","isKey","keyCode","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","html","text","WidgetBase","Widget","inherit","klassName","velm","namespace","Window","init","element","options","defaults","selectors","title","footer","elements","references","effect","parseHandleForTitle","maximized","maximizable","bodyContent","footerContent","this","_this","$el","hasClass","data","find","prepend","buttons","maximize","restore","undock","setSticky","sticky","appendTo","centerWindow","navigator","userAgent","bind","event","stopPropagation","initHandlers","hide","show","removeClass","state","bottomOffset","window_manager","getContainer","parseInt","right","bottom","maxWidth","trigger","undefined","window_info","removeProp","cb","callbackHandler","call","arguments","fadeIn","setEffect","getEffect","maxHeight","bodyTop","outerWidth","outerHeight","close","clearBlocker","setFocused","windows","setNextFocused","closeFn","fadeOut","$windowTab","sendToBack","returnVal","setActive","active","setIndex","index","setWindowTab","windowTab","getWindowTab","getTitle","getElement","getSticky","setManager","blocker","moveable","resize","setBlocker","window_handle","shade","getParent","setParent","getBlocker","blink","focused","blinkInterval","setInterval","toggleClass","setTimeout","clearInterval","wgt","option","fn","each","partial","domNode","$this","opts","clone","WindowManager","initialize","findWindowByID","returnValue","console","log","destroyWindow","splice","resortWindows","closeWindow","startZIndex","focused_window","focusedWindowIndex","windowHandle","indexOf","unshift","container","addWindow","window_object","scrollTo","createWindow","window_options","final_options","windowTemplate","template","newWindow","main"],"mappings":"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","file":"../skylark-ui-window.js","sourcesContent":["define('skylark-utils-interact/interact',[\r\n    \"skylark-utils/skylark\",\r\n    \"skylark-utils/langx\"\r\n], function(skylark, langx) {\r\n\t\r\n\tvar interact = skylark.interact = {\r\n\t};\r\n\r\n\treturn interact;\r\n});\r\n\r\n\ndefine('skylark-utils-interact/mover',[\r\n    \"./interact\",\r\n    \"skylark-utils/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/eventer\",\r\n    \"skylark-utils/styler\"\r\n],function(interact, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return interact.mover = mover;\r\n});\r\n\n/**\n * skylark-ui-swt - The skylark standard widget tookit\n * @author Hudaokeji, Inc.\n * @version v0.9.2.beta\n * @link https://github.com/skylarkui/skylark-ui-swt/\n * @license MIT\n */\ndefine('skylark-ui-swt/sbswt',[\n  \"skylark-utils/skylark\",\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/query\",\n  \"skylark-utils/widgets\"\n],function(skylark,langx,browser,eventer,noder,geom,$,widgets){\n\tvar ui = skylark.ui = skylark.ui || {}, \n\t\tsbswt = ui.sbswt = {};\n\n/*---------------------------------------------------------------------------------*/\n\t/*\n\t * Fuel UX utilities.js\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\n\n\n\tlangx.mixin(sbswt, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n/*---------------------------------------------------------------------------------*/\n\n\tvar WidgetBase = widgets.Widget.inherit({\n        klassName: \"WidgetBase\",\n    });\n\n\n\tlangx.mixin(sbswt, {\n\t\tWidgetBase : WidgetBase\n\t});\n\n\treturn sbswt;\n});\n\ndefine('skylark-ui-window/window',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/datax\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"skylark-utils-interact/mover\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,datax,eventer,noder,geom,velm,$,mover,sbswt){\n\n\n/*----------------------------------------------------------------------*/\n    /*\n    https://github.com/earmbrust/bootstrap-window\n\n    Copyright (c) 2013-2015 Elden Armbrust\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n    */\n    var namespace = 'bsw';\n\n    var Window = sbswt.Window = sbswt.WidgetBase.inherit({\n        klassName: \"Window\",\n\n        init : function(element,options) {\n            options = options || {};\n            var defaults = {\n                selectors: {\n                    handle: '.window-header',\n                    title: '.window-title',\n                    body: '.window-body',\n                    footer: '.window-footer'\n                },\n                elements: {\n                    handle: null,\n                    title: null,\n                    body: null,\n                    footer: null\n                },\n                references: {\n                    body: $('body'),\n                    window: $(window)\n                },\n                effect: 'fade',\n                parseHandleForTitle: true,\n                maximized: false,\n                maximizable: false,\n                title: 'No Title',\n                bodyContent: '',\n                footerContent: ''\n            };\n            options = this.options = langx.mixin({}, defaults, options,true);\n\n            var _this = this;\n\n            this.$el = $(element);\n\n            if (!this.$el.hasClass('window')) {\n                this.$el.addClass('window');\n            }\n            this.$el.data('window', this);\n\n            if (this.$el.find(options.selectors.handle).length <= 0) {\n                this.$el.prepend('<div class=\"window-header\"><h4 class=\"window-title\"></h4></div>');\n            }\n\n            options.elements.handle = this.$el.find(options.selectors.handle);\n            options.elements.title = this.$el.find(options.selectors.title);\n            options.elements.body = this.$el.find(options.selectors.body);\n            options.elements.footer = this.$el.find(options.selectors.footer);\n            options.elements.title.html(options.title);\n\n            if (options.maximizable) {\n                options.elements.buttons = {};\n                options.elements.buttons.maximize = $('<button data-maximize=\"window\"><i class=\"glyphicon glyphicon-chevron-up\"></i></button>');\n                options.elements.handle.prepend(options.elements.buttons.maximize);\n                options.elements.buttons.restore = $('<button data-restore=\"window\"><i class=\"glyphicon glyphicon-modal-window\"></i></button>');\n                options.elements.handle.prepend(options.elements.buttons.restore);\n\n            }\n            if (_this.$el.find('[data-dismiss=window]').length <= 0) {\n                options.elements.handle.prepend('<button type=\"button\" class=\"close\" data-dismiss=\"window\" aria-hidden=\"true\"><i class=\"glyphicon glyphicon-remove\"></i></button>');\n            }\n            options.elements.body.html(options.bodyContent);\n            options.elements.footer.html(options.footerContent);\n\n            this.undock();\n\n            this.setSticky(options.sticky);\n\n            return this;\n        },\n\n        undock : function() {\n            var _this = this;\n            this.$el.css('visibility', 'hidden');\n            this.$el.appendTo('body');\n            this.centerWindow();\n            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n                this.options.references.window.bind('orientationchange resize', function(event) {\n                    _this.centerWindow();\n                });\n            }\n\n            this.$el.on('touchmove', function(e) {\n                e.stopPropagation();\n            });\n\n            this.initHandlers();\n            this.$el.hide();\n            if (this.options.id) {\n                this.id = this.options.id;\n            } else {\n                this.id = '';\n            }\n            this.show();\n        },\n\n        maximize : function() {\n            this.$el.removeClass('minimized');\n            this.$el.addClass('maximized');\n            this.state = \"maximized\";\n            var bottomOffset = 0;\n            if (this.options.window_manager) {\n                bottomOffset = this.options.window_manager.getContainer().height();\n            }\n            this.$el.css({\n                top: parseInt($('body').css('padding-top'), 10),\n                left: 0,\n                right: 0,\n                bottom: bottomOffset,\n                maxWidth: 'none',\n                width: 'auto',\n                height: 'auto'\n            });\n            this.$el.trigger(namespace + '.maximize');\n        },\n\n\n        restore : function() {\n            this.$el.removeClass('minimized');\n            this.$el.removeClass('maximized');\n            this.$el.removeAttr('style');\n            this.state = undefined;\n            this.$el.css({\n                top: this.window_info.top,\n                left: this.window_info.left,\n                width: this.window_info.width,\n                height: this.window_info.height\n            });\n            this.$el.removeProp('style');\n            this.$el.trigger(namespace + '.restore');\n        },\n\n        show : function(cb) {\n            var _this = this;\n            this.$el.css('visibility', 'visible');\n            var callbackHandler = function() {\n                _this.$el.trigger(namespace + '.show');\n                if (cb) {\n                    cb.call(_this, arguments);\n                }\n            };\n            if (this.options.effect === 'fade') {\n                this.$el.fadeIn(undefined, undefined, callbackHandler);\n            } else {\n                callbackHandler.call(this.$el);\n            }\n        },\n\n        setEffect : function(effect) {\n            this.options.effect = effect;\n        },\n\n        getEffect : function() {\n            return this.options.effect;\n        },\n\n        centerWindow : function() {\n            var top, left,\n                bodyTop = parseInt(this.options.references.body.position().top, 10) + parseInt(this.options.references.body.css('paddingTop'), 10),\n                maxHeight;\n            if (!this.options.sticky) {\n                left = (this.options.references.window.width() / 2) - (this.$el.width() / 2);\n                top = (this.options.references.window.height() / 2) - (this.$el.height() / 2);\n            } else {\n                left = (this.options.references.window.width() / 2) - (this.$el.width() / 2);\n                top = (this.options.references.window.height() / 2) - (this.$el.height() / 2);\n            }\n\n            if (top < bodyTop) {\n                top = bodyTop;\n            }\n            maxHeight = ((this.options.references.window.height() - bodyTop) - (parseInt(this.options.elements.handle.css('height'), 10) + parseInt(this.options.elements.footer.css('height'), 10))) - 45;\n            this.options.elements.body.css('maxHeight', maxHeight);\n\n            this.$el.css('left', left);\n            this.$el.css('top', top);\n            if (this.$el && this.$el.length > 0) {\n                this.window_info = {\n                    top: this.$el.position().top,\n                    left: this.$el.position().left,\n                    width: this.$el.outerWidth(),\n                    height: this.$el.outerHeight()\n                };\n            }\n            this.$el.trigger(namespace + '.centerWindow');\n        },\n\n        close : function(cb) {\n            var _this = this;\n            if (this.options.parent) {\n                this.options.parent.clearBlocker();\n                if (this.options.window_manager) {\n                    this.options.window_manager.setFocused(this.options.parent);\n                }\n            } else if (this.options.window_manager && this.options.window_manager.windows.length > 0) {\n                this.options.window_manager.setNextFocused();\n            }\n\n            var closeFn = function() {\n                _this.$el.trigger(namespace + '.close');\n                _this.$el.remove();\n                if (cb) {\n                    cb.call(_this);\n                }\n            };\n\n            if (this.options.effect === 'fade') {\n                this.$el.fadeOut(closeFn);\n            } else {\n                closeFn.call(_this.$el);\n            }\n\n            if (this.$windowTab) {\n                if (this.options.effect === 'fade') {\n                    this.$windowTab.fadeOut(400, function() {\n                        _this.$windowTab.remove();\n                    });\n                } else {\n                    this.$windowTab.hide();\n                    this.$windowTab.remove();\n                }\n\n            }\n        },\n\n        on : function() {\n            this.$el.on.apply(this.$el, arguments);\n        },\n\n        sendToBack : function () {\n            var returnVal = false;\n            if (this.options.window_manager) {\n                returnVal = this.options.window_manager.sendToBack(this);\n            }\n            return returnVal;\n        },\n\n        setActive : function(active) {\n            if (active) {\n                this.$el.addClass('active');\n                if (this.$windowTab) {\n                    this.$windowTab.addClass('label-primary');\n                }\n                this.$el.trigger('active');\n            } else {\n                this.$el.removeClass('active');\n                if (this.$windowTab) {\n                    this.$windowTab.removeClass('label-primary');\n                    this.$windowTab.addClass('label-default');\n                }\n                this.$el.trigger('inactive');\n            }\n        },\n\n        setIndex : function(index) {\n            this.$el.css('zIndex', index);\n        },\n\n        setWindowTab : function(windowTab) {\n            this.$windowTab = windowTab;\n        },\n\n        getWindowTab : function() {\n            return this.$windowTab;\n        },\n\n        getTitle : function() {\n            return this.options.title;\n        },\n\n        getElement : function() {\n            return this.$el;\n        },\n\n        setSticky : function(sticky) {\n            this.options.sticky = sticky;\n            if (sticky === false) {\n                this.$el.css({\n                    'position': 'absolute'\n                });\n            } else {\n                this.$el.css({\n                    'position': 'fixed'\n                });\n            }\n        },\n\n        getSticky : function() {\n            return this.options.sticky;\n        },\n\n        setManager : function(window_manager) {\n            this.options.window_manager = window_manager;\n        },\n\n        initHandlers : function() {\n            var _this = this;\n            var title_buttons;\n\n            this.$el.find('[data-dismiss=window]').on('click', function(event) {\n                event.stopPropagation();\n                event.preventDefault();\n                if (_this.options.blocker) {\n                    return;\n                }\n                _this.close();\n            });\n\n            this.$el.find('[data-maximize=window]').on('click', function(event) {\n                event.stopPropagation();\n                event.preventDefault();\n                if (_this.options.blocker) {\n                    return;\n                }\n                _this.maximize();\n            });\n\n            this.$el.find('[data-restore=window]').on('click', function(event) {\n                if (_this.options.blocker) {\n                    return;\n                }\n                _this.restore();\n            });\n\n            this.moveable = mover.movable(this.$el[0],{\n                handle : this.options.elements.title[0]\n            });\n\n            /*\n\n \n            this.$el.off('mousedown');\n            this.$el.on('mousedown', function() {\n                if (_this.options.blocker) {\n                    _this.options.blocker.getElement().trigger('focused');\n                    _this.options.blocker.blink();\n                    return;\n                } else {\n                    _this.$el.trigger('focused');\n                }\n\n                if (_this.$el.hasClass('ns-resize') || _this.$el.hasClass('ew-resize')) {\n                    $('body > *').addClass('disable-select');\n                    _this.resizing = true;\n                    _this.offset = {};\n                    _this.offset.x = event.pageX;\n                    _this.offset.y = event.pageY;\n                    _this.window_info = {\n                        top: _this.$el.position().top,\n                        left: _this.$el.position().left,\n                        width: _this.$el.outerWidth(),\n                        height: _this.$el.outerHeight()\n                    };\n\n                    if (event.offsetY < 5) {\n                        _this.$el.addClass('north');\n                    }\n                    if (event.offsetY > (_this.$el.height() - 5)) {\n                        _this.$el.addClass('south');\n                    }\n                    if (event.offsetX < 5) {\n                        _this.$el.addClass('west');\n                    }\n                    if (event.offsetX > (_this.$el.width() - 5)) {\n                        _this.$el.addClass('east');\n                    }\n                }\n            });\n\n\n            _this.options.references.body.on('mouseup', function() {\n                _this.resizing = false;\n                $('body > *').removeClass('disable-select');\n                _this.$el.removeClass('west');\n                _this.$el.removeClass('east');\n                _this.$el.removeClass('north');\n                _this.$el.removeClass('south');\n\n            });\n            _this.options.elements.handle.off('mousedown');\n            _this.options.elements.handle.on('mousedown', function(event) {\n                if (_this.options.blocker) {\n                    return;\n                }\n                _this.moving = true;\n                _this.offset = {};\n                _this.offset.x = event.pageX - _this.$el.position().left;\n                _this.offset.y = event.pageY - _this.$el.position().top;\n                $('body > *').addClass('disable-select');\n            });\n            _this.options.elements.handle.on('mouseup', function(event) {\n                _this.moving = false;\n                $('body > *').removeClass('disable-select');\n            });\n\n\n            _this.options.references.body.on('mousemove', _this.$el, function(event) {\n                if (_this.moving && _this.state !== \"maximized\" &&\n                    (\n                        $(event.toElement).hasClass(_this.options.selectors.handle.replace('.', '')) ||\n                        $(event.toElement).hasClass(_this.options.selectors.title.replace('.', ''))\n                    )) {\n\n\n                    var top = _this.options.elements.handle.position().top,\n                        left = _this.options.elements.handle.position().left;\n                    _this.$el.css('top', event.pageY - _this.offset.y);\n                    _this.window_info.top = event.pageY - _this.offset.y;\n                    _this.$el.css('left', event.pageX - _this.offset.x);\n                    _this.window_info.left = event.pageX - _this.offset.x;\n                    _this.window_info.width = _this.$el.outerWidth();\n                    _this.window_info.height = _this.$el.outerHeight();\n                }\n                if (_this.options.resizable && _this.resizing) {\n                    if (_this.$el.hasClass(\"east\")) {\n                        _this.$el.css('width', event.pageX - _this.window_info.left);\n                    }\n                    if (_this.$el.hasClass(\"west\")) {\n\n                        _this.$el.css('left', event.pageX);\n                        _this.$el.css('width', _this.window_info.width + (_this.window_info.left - event.pageX));\n                    }\n                    if (_this.$el.hasClass(\"south\")) {\n                        _this.$el.css('height', event.pageY - _this.window_info.top);\n                    }\n                    if (_this.$el.hasClass(\"north\")) {\n                        _this.$el.css('top', event.pageY);\n                        _this.$el.css('height', _this.window_info.height + (_this.window_info.top - event.pageY));\n                    }\n                }\n            });\n\n            this.$el.on('mousemove', function(event) {\n                if (_this.options.blocker) {\n                    return;\n                }\n                if (_this.options.resizable) {\n                    if (event.offsetY > (_this.$el.height() - 5) || event.offsetY < 5) {\n                        _this.$el.addClass('ns-resize');\n                    } else {\n                        _this.$el.removeClass('ns-resize');\n                    }\n                    if (event.offsetX > (_this.$el.width() - 5) || event.offsetX < 5) {\n                        _this.$el.addClass('ew-resize');\n\n                    } else {\n                        _this.$el.removeClass('ew-resize');\n                    }\n                }\n\n            });\n            */\n        },\n\n        resize : function(options) {\n            options = options || {};\n            if (options.top) {\n                this.$el.css('top', options.top);\n            }\n            if (options.left) {\n                this.$el.css('left', options.left);\n            }\n            if (options.height) {\n                this.$el.css('height', options.height);\n            }\n            if (options.width) {\n                this.$el.css('width', options.width);\n            }\n            this.$el.trigger(namespace + '.resize');\n        },\n\n        setBlocker : function(window_handle) {\n            this.options.blocker = window_handle;\n            this.$el.find('.disable-shade').remove();\n            var shade = '<div class=\"disable-shade\"></div>';\n            this.options.elements.body.append(shade);\n            this.options.elements.body.addClass('disable-scroll');\n            this.options.elements.footer.append(shade);\n            if (this.options.effect === 'fade') {\n                this.$el.find('.disable-shade').fadeIn();\n            } else {\n                this.$el.find('.disable-shade').show();\n            }\n\n            if (!this.options.blocker.getParent()) {\n                this.options.blocker.setParent(this);\n            }\n        },\n\n\n        getBlocker : function() {\n            return this.options.blocker;\n        },\n\n        clearBlocker : function() {\n            this.options.elements.body.removeClass('disable-scroll');\n            if (this.options.effect === 'fade') {\n                this.$el.find('.disable-shade').fadeOut(function() {\n                    this.remove();\n                });\n            } else {\n                this.$el.find('.disable-shade').hide();\n                this.remove();\n            }\n\n            delete this.options.blocker;\n        },\n\n        setParent : function(window_handle) {\n            this.options.parent = window_handle;\n            if (!this.options.parent.getBlocker()) {\n                this.options.parent.setBlocker(this);\n            }\n        },\n\n        getParent : function() {\n            return this.options.parent;\n        },\n\n        blink : function() {\n            var _this = this,\n                active = this.$el.hasClass('active'),\n\n                windowTab = this.getWindowTab(),\n                focused = windowTab ? windowTab.hasClass('label-primary') : undefined,\n\n                blinkInterval = setInterval(function() {\n                    _this.$el.toggleClass('active');\n                    if (windowTab) {\n                        windowTab.toggleClass('label-primary');\n                    }\n\n                }, 250),\n                blinkTimeout = setTimeout(function() {\n                    clearInterval(blinkInterval);\n                    if (active) {\n                        _this.$el.addClass('active');\n                    }\n                    if (windowTab && focused) {\n                        windowTab.addClass('label-primary');\n                    }\n\n                }, 1000);\n        }\n\n    });\n\n\n    datax.window = function(elm,options) {\n      var wgt  = this.data(elm,'sbswt.window');\n\n      if (!wgt) {\n        this.data(elm,'sbswt.window', (wgt = new Window(elm)));\n      }\n      if (typeof option == 'string') {\n        wgt[options]();\n      } \n   };\n\n\n    $.fn.window = function(options) {\n        return this.each(function() {\n            datax.window(this,options);          \n        });\n    };\n\n    velm.partial(\"window\",function(options){\n        datax.window(this.domNode,options);\n    });\n\n    $('[data-window-target]').off('click');\n    $('[data-window-target]').on('click', function() {\n        var $this = $(this),\n            opts = {\n                selectors: {}\n            };\n        if ($this.data('windowTitle')) {\n            opts.title = $this.data('windowTitle');\n        }\n\n        if ($this.data('titleHandle')) {\n            opts.selectors.title = $this.data('titleHandle');\n        }\n\n        if ($this.data('windowHandle')) {\n            opts.selectors.handle = $this.data('windowHandle');\n        }\n        if ($this.data('clone')) {\n            opts.clone = $this.data('windowHandle');\n        }\n\n        $($this.data('windowTarget')).window(opts);\n    });\n\n\n    var WindowManager = sbswt.WindowManager = sbswt.WidgetBase.inherit({\n        klassName: \"WindowManager\",\n\n        init : function(options) {\n            this.windows = [];\n            options = options || {};\n            this.initialize(options);\n            return this;\n        },\n\n        findWindowByID : function(id) {\n            var returnValue = null;\n            langx.each(this.windows, function(index, window) {\n                console.log(arguments);\n                if (window.id === id) {\n                    returnValue = window;\n                }\n            });\n            return returnValue;\n        },\n\n        destroyWindow : function(window_handle) {\n            var _this = this;\n            var returnVal = false;\n            langx.each(this.windows, function(index, window) {\n                if (window === window_handle) {\n                    window_handle.close();\n                    _this.windows.splice(index, 1);\n                    _this.resortWindows();\n                    returnVal = true;\n                }\n            });\n            return returnVal;\n        },\n\n        closeWindow : function(window_handle) {\n            this.destroyWindow(window_handle);\n        },\n\n        resortWindows : function() {\n            var startZIndex = 900;\n            langx.each(this.windows, function(index, window) {\n\n                window.setIndex(startZIndex + index);\n            });\n        },\n\n        setFocused : function(focused_window) {\n            var focusedWindowIndex;\n            while (focused_window.getBlocker()) {\n                focused_window = focused_window.getBlocker();\n            }\n            langx.each(this.windows, function(index, windowHandle) {\n                windowHandle.setActive(false);\n                if (windowHandle === focused_window) {\n                    focusedWindowIndex = index;\n                }\n            });\n            this.windows.push(this.windows.splice(focusedWindowIndex, 1)[0]);\n            focused_window.setActive(true);\n            this.resortWindows();\n\n        },\n\n        sendToBack : function(window) {\n            var windowHandle = this.windows.splice(this.windows.indexOf(window), 1)[0];\n            this.windows.unshift(windowHandle);\n            this.resortWindows();\n            return true;\n        },\n\n\n        initialize : function(options) {\n            this.options = options;\n            this.elements = {};\n\n            if (this.options.container) {\n                this.elements.container = $(this.options.container);\n                this.elements.container.addClass('window-pane');\n            }\n        },\n\n        getContainer : function() {\n            var returnVal;\n            if (this.elements && this.elements.container) {\n                returnVal = this.elements.container;\n            }\n            return returnVal;\n        },\n\n        setNextFocused : function() {\n            this.setFocused(this.windows[this.windows.length - 1]);\n        },\n\n        addWindow : function(window_object) {\n            var _this = this;\n            window_object.getElement().on('focused', function(event) {\n                _this.setFocused(window_object);\n            });\n            window_object.getElement().on('close', function() {\n                _this.destroyWindow(window_object);\n                if (window_object.getWindowTab()) {\n                    window_object.getWindowTab().remove();\n                }\n\n            });\n\n            window_object.on('bsw.restore', function() {\n                _this.resortWindows();\n            });\n\n            if (this.options.container) {\n                window_object.setWindowTab($('<span class=\"label label-default\">' + window_object.getTitle() + '<button class=\"close\">x</button></span>'));\n                window_object.getWindowTab().find('.close').on('click', function(event) {\n                    var blocker = window_object.getBlocker();\n                    if (!blocker) {\n                        window_object.close();\n                    } else {\n                        blocker.blink();\n                    }\n\n                });\n                window_object.getWindowTab().on('click', function(event) {\n                    var blocker = window_object.getBlocker();\n                    if (!blocker) {\n                        _this.setFocused(window_object);\n                        if (window_object.getSticky()) {\n                            window.scrollTo(0, window_object.getElement().position().top);\n                        }\n                    } else {\n                        blocker.blink();\n                    }\n                });\n\n                $(this.options.container).append(window_object.getWindowTab());\n            }\n\n            this.windows.push(window_object);\n            window_object.setManager(this);\n            this.setFocused(window_object);\n            return window_object;\n        },\n\n        createWindow : function(window_options) {\n            var _this = this;\n            var final_options = langx.mixin({},window_options);\n            if (this.options.windowTemplate && !final_options.template) {\n                final_options.template = this.options.windowTemplate;\n            }\n\n            var newWindow = new Window(final_options.template,final_options);\n\n\n            return this.addWindow(newWindow);\n        }\n\n    });\n\n\n/*----------------------------------------------------------------------*/\n    langx.mixin(sbswt,{\n        Window : Window,\n        WindowManager : WindowManager\n    });\n\n    return $.fn.window;\n});\ndefine('skylark-ui-window/main',[\r\n    \"skylark-utils/query\",\r\n    \"./window\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-ui-window', ['skylark-ui-window/main'], function (main) { return main; });\n\n"]}
{"version":3,"sources":["skylark-domx-windows.js"],"names":["define","skylark","attach","langx","browser","datax","eventer","noder","geom","velm","$","plugins","Movable","windows","Window","Plugin","inherit","klassName","pluginName","options","selectors","handle","title","body","footer","elements","references","window","effect","parseHandleForTitle","maximized","maximizable","bodyContent","footerContent","_construct","elm","this","overrided","$el","hasClass","addClass","data","find","length","prepend","html","buttons","maximize","restore","undock","setSticky","sticky","_this","css","appendTo","centerWindow","test","navigator","userAgent","bind","event","on","e","stopPropagation","initHandlers","hide","id","show","removeClass","state","bottomOffset","window_manager","getContainer","height","top","parseInt","left","right","bottom","maxWidth","width","trigger","namespace","removeAttr","undefined","window_info","removeProp","cb","callbackHandler","call","arguments","fadeIn","setEffect","getEffect","maxHeight","bodyTop","position","outerWidth","outerHeight","close","parent","clearBlocker","setFocused","setNextFocused","closeFn","remove","fadeOut","$windowTab","apply","sendToBack","returnVal","setActive","active","setIndex","index","setWindowTab","windowTab","getWindowTab","getTitle","getElement","getSticky","setManager","preventDefault","blocker","moveable","resize","setBlocker","window_handle","shade","append","getParent","setParent","getBlocker","blink","focused","blinkInterval","setInterval","toggleClass","setTimeout","clearInterval","wgt","option","off","$this","opts","clone","register","WindowManager","Emitter","init","initialize","findWindowByID","returnValue","each","console","log","destroyWindow","splice","resortWindows","closeWindow","focused_window","focusedWindowIndex","windowHandle","push","indexOf","unshift","container","addWindow","window_object","scrollTo","createWindow","window_options","final_options","mixin","windowTemplate","template","newWindow","main"],"mappings":";;;;;;;g4BAAAA,EAAA,gCACA,oBACA,SAAAC,GACA,OAAAA,EAAAC,OAAA,qBAGAF,EAAA,+BACA,wBACA,sBACA,uBACA,oBACA,uBACA,qBACA,oBACA,oBACA,qBACA,uBACA,gCACA,aACA,SAAAC,EAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAGA,IAGAC,EAAAH,EAAAI,OAAAC,SACAC,UAAA,SAEAC,WAAA,cAEAC,SACAC,WACAC,OAAA,iBACAC,MAAA,gBACAC,KAAA,eACAC,OAAA,kBAEAC,UACAJ,OAAA,KACAC,MAAA,KACAC,KAAA,KACAC,OAAA,MAEAE,YACAH,KAAAb,EAAA,QACAiB,OAAAjB,EAAAiB,SAEAC,OAAA,OACAC,qBAAA,EACAC,WAAA,EACAC,aAAA,EACAT,MAAA,WACAU,YAAA,GACAC,cAAA,IAGAC,WAAA,SAAAC,EAAAhB,GACAiB,KAAAC,UAAAF,EAAAhB,GAEAA,EAAAiB,KAAAjB,QAzCA,OA6CAiB,KAAAE,IAAAF,KAAA1B,IAEA0B,KAAAE,IAAAC,SAAA,WACAH,KAAAE,IAAAE,SAAA,UAEAJ,KAAAE,IAAAG,KAAA,SAAAL,MAEAA,KAAAE,IAAAI,KAAAvB,EAAAC,UAAAC,QAAAsB,QAAA,GACAP,KAAAE,IAAAM,QAAA,mEAIAzB,EAAAM,SAAAJ,OAAAe,KAAAE,IAAAI,KAAAvB,EAAAC,UAAAC,QACAF,EAAAM,SAAAH,MAAAc,KAAAE,IAAAI,KAAAvB,EAAAC,UAAAE,OACAH,EAAAM,SAAAF,KAAAa,KAAAE,IAAAI,KAAAvB,EAAAC,UAAAG,MACAJ,EAAAM,SAAAD,OAAAY,KAAAE,IAAAI,KAAAvB,EAAAC,UAAAI,QACAL,EAAAM,SAAAH,MAAAuB,KAAA1B,EAAAG,OA/EAH,EAAAY,cACAZ,EAAAM,SAAAqB,WACA3B,EAAAM,SAAAqB,QAAAC,SAAArC,EAAA,0FACAS,EAAAM,SAAAJ,OAAAuB,QAAAzB,EAAAM,SAAAqB,QAAAC,UACA5B,EAAAM,SAAAqB,QAAAE,QAAAtC,EAAA,2FACAS,EAAAM,SAAAJ,OAAAuB,QAAAzB,EAAAM,SAAAqB,QAAAE,UAwDAZ,KArDAE,IAAAI,KAAA,yBAAAC,QAAA,GACAxB,EAAAM,SAAAJ,OAAAuB,QAAA,oIAEAzB,EAAAM,SAAAF,KAAAsB,KAAA1B,EAAAa,aACAb,EAAAM,SAAAD,OAAAqB,KAAA1B,EAAAc,eAEAG,KAAAa,SAEAb,KAAAc,UAAA/B,EAAAgC,QAEAf,MAGAa,OAAA,WACA,IAAAG,EAAAhB,KACAA,KAAAE,IAAAe,IAAA,aAAA,UACAjB,KAAAE,IAAAgB,SAAA,QACAlB,KAAAmB,eACA,iEAAAC,KAAAC,UAAAC,YACAtB,KAAAjB,QAAAO,WAAAC,OAAAgC,KAAA,2BAAA,SAAAC,GACAR,EAAAG,iBAIAnB,KAAAE,IAAAuB,GAAA,YAAA,SAAAC,GACAA,EAAAC,oBAGA3B,KAAA4B,eACA5B,KAAAE,IAAA2B,OACA7B,KAAAjB,QAAA+C,GACA9B,KAAA8B,GAAA9B,KAAAjB,QAAA+C,GAEA9B,KAAA8B,GAAA,GAEA9B,KAAA+B,QAGApB,SAAA,WACAX,KAAAE,IAAA8B,YAAA,aACAhC,KAAAE,IAAAE,SAAA,aACAJ,KAAAiC,MAAA,YACA,IAAAC,EAAA,EACAlC,KAAAjB,QAAAoD,iBACAD,EAAAlC,KAAAjB,QAAAoD,eAAAC,eAAAC,UAEArC,KAAAE,IAAAe,KACAqB,IAAAC,SAAAjE,EAAA,QAAA2C,IAAA,eAAA,IACAuB,KAAA,EACAC,MAAA,EACAC,OAAAR,EACAS,SAAA,OACAC,MAAA,OACAP,OAAA,SAEArC,KAAAE,IAAA2C,QAAAC,iBAIAlC,QAAA,WACAZ,KAAAE,IAAA8B,YAAA,aACAhC,KAAAE,IAAA8B,YAAA,aACAhC,KAAAE,IAAA6C,WAAA,SACA/C,KAAAiC,WAAAe,EACAhD,KAAAE,IAAAe,KACAqB,IAAAtC,KAAAiD,YAAAX,IACAE,KAAAxC,KAAAiD,YAAAT,KACAI,MAAA5C,KAAAiD,YAAAL,MACAP,OAAArC,KAAAiD,YAAAZ,SAEArC,KAAAE,IAAAgD,WAAA,SACAlD,KAAAE,IAAA2C,QAAAC,gBAGAf,KAAA,SAAAoB,GACA,IAAAnC,EAAAhB,KACAA,KAAAE,IAAAe,IAAA,aAAA,WACA,IAAAmC,EAAA,WACApC,EAAAd,IAAA2C,QAAAC,YACAK,GACAA,EAAAE,KAAArC,EAAAsC,YAGA,SAAAtD,KAAAjB,QAAAS,OACAQ,KAAAE,IAAAqD,YAAAP,OAAAA,EAAAI,GAEAA,EAAAC,KAAArD,KAAAE,MAIAsD,UAAA,SAAAhE,GACAQ,KAAAjB,QAAAS,OAAAA,GAGAiE,UAAA,WACA,OAAAzD,KAAAjB,QAAAS,QAGA2B,aAAA,WACA,IAAAmB,EAAAE,EAEAkB,EADAC,EAAApB,SAAAvC,KAAAjB,QAAAO,WAAAH,KAAAyE,WAAAtB,IAAA,IAAAC,SAAAvC,KAAAjB,QAAAO,WAAAH,KAAA8B,IAAA,cAAA,IAEAjB,KAAAjB,QAAAgC,OAIAyB,EAAAxC,KAAAjB,QAAAO,WAAAC,OAAAqD,QAAA,EAAA5C,KAAAE,IAAA0C,QAAA,GACAN,EAAAtC,KAAAjB,QAAAO,WAAAC,OAAA8C,SAAA,EAAArC,KAAAE,IAAAmC,SAAA,GAGAsB,IACArB,EAAAqB,GAEAD,EAAA1D,KAAAjB,QAAAO,WAAAC,OAAA8C,SAAAsB,GAAApB,SAAAvC,KAAAjB,QAAAM,SAAAJ,OAAAgC,IAAA,UAAA,IAAAsB,SAAAvC,KAAAjB,QAAAM,SAAAD,OAAA6B,IAAA,UAAA,KAAA,GACAjB,KAAAjB,QAAAM,SAAAF,KAAA8B,IAAA,YAAAyC,GAEA1D,KAAAE,IAAAe,IAAA,OAAAuB,GACAxC,KAAAE,IAAAe,IAAA,MAAAqB,GACAtC,KAAAE,KAAAF,KAAAE,IAAAK,OAAA,IACAP,KAAAiD,aACAX,IAAAtC,KAAAE,IAAA0D,WAAAtB,IACAE,KAAAxC,KAAAE,IAAA0D,WAAApB,KACAI,MAAA5C,KAAAE,IAAA2D,aACAxB,OAAArC,KAAAE,IAAA4D,gBAGA9D,KAAAE,IAAA2C,QAAAC,qBAGAiB,MAAA,SAAAZ,GACA,IAAAnC,EAAAhB,KACAA,KAAAjB,QAAAiF,QACAhE,KAAAjB,QAAAiF,OAAAC,eACAjE,KAAAjB,QAAAoD,gBACAnC,KAAAjB,QAAAoD,eAAA+B,WAAAlE,KAAAjB,QAAAiF,SAEAhE,KAAAjB,QAAAoD,gBAAAnC,KAAAjB,QAAAoD,eAAA1D,QAAA8B,OAAA,GACAP,KAAAjB,QAAAoD,eAAAgC,iBAGA,IAAAC,EAAA,WACApD,EAAAd,IAAA2C,QAAAC,aACA9B,EAAAd,IAAAmE,SACAlB,GACAA,EAAAE,KAAArC,IAIA,SAAAhB,KAAAjB,QAAAS,OACAQ,KAAAE,IAAAoE,QAAAF,GAEAA,EAAAf,KAAArC,EAAAd,KAGAF,KAAAuE,aACA,SAAAvE,KAAAjB,QAAAS,OACAQ,KAAAuE,WAAAD,QAAA,IAAA,WACAtD,EAAAuD,WAAAF,YAGArE,KAAAuE,WAAA1C,OACA7B,KAAAuE,WAAAF,YAMA5C,GAAA,WACAzB,KAAAE,IAAAuB,GAAA+C,MAAAxE,KAAAE,IAAAoD,YAGAmB,WAAA,WACA,IAAAC,GAAA,EAIA,OAHA1E,KAAAjB,QAAAoD,iBACAuC,EAAA1E,KAAAjB,QAAAoD,eAAAsC,WAAAzE,OAEA0E,GAGAC,UAAA,SAAAC,GACAA,GACA5E,KAAAE,IAAAE,SAAA,UACAJ,KAAAuE,YACAvE,KAAAuE,WAAAnE,SAAA,iBAEAJ,KAAAE,IAAA2C,QAAA,YAEA7C,KAAAE,IAAA8B,YAAA,UACAhC,KAAAuE,aACAvE,KAAAuE,WAAAvC,YAAA,iBACAhC,KAAAuE,WAAAnE,SAAA,kBAEAJ,KAAAE,IAAA2C,QAAA,cAIAgC,SAAA,SAAAC,GACA9E,KAAAE,IAAAe,IAAA,SAAA6D,IAGAC,aAAA,SAAAC,GACAhF,KAAAuE,WAAAS,GAGAC,aAAA,WACA,OAAAjF,KAAAuE,YAGAW,SAAA,WACA,OAAAlF,KAAAjB,QAAAG,OAGAiG,WAAA,WACA,OAAAnF,KAAAE,KAGAY,UAAA,SAAAC,GACAf,KAAAjB,QAAAgC,OAAAA,GACA,IAAAA,EACAf,KAAAE,IAAAe,KACA2C,SAAA,aAGA5D,KAAAE,IAAAe,KACA2C,SAAA,WAKAwB,UAAA,WACA,OAAApF,KAAAjB,QAAAgC,QAGAsE,WAAA,SAAAlD,GACAnC,KAAAjB,QAAAoD,eAAAA,GAGAP,aAAA,WACA,IAAAZ,EAAAhB,KAGAA,KAAAE,IAAAI,KAAA,yBAAAmB,GAAA,QAAA,SAAAD,GACAA,EAAAG,kBACAH,EAAA8D,iBACAtE,EAAAjC,QAAAwG,SAGAvE,EAAA+C,UAGA/D,KAAAE,IAAAI,KAAA,0BAAAmB,GAAA,QAAA,SAAAD,GACAA,EAAAG,kBACAH,EAAA8D,iBACAtE,EAAAjC,QAAAwG,SAGAvE,EAAAL,aAGAX,KAAAE,IAAAI,KAAA,yBAAAmB,GAAA,QAAA,SAAAD,GACAR,EAAAjC,QAAAwG,SAGAvE,EAAAJ,YAGAZ,KAAAwF,SAAA,IAAAhH,EAAAwB,KAAAE,IAAA,IACAjB,OAAAe,KAAAjB,QAAAM,SAAAH,MAAA,MAiIAuG,OAAA,SAAA1G,IACAA,EAAAA,OACAuD,KACAtC,KAAAE,IAAAe,IAAA,MAAAlC,EAAAuD,KAEAvD,EAAAyD,MACAxC,KAAAE,IAAAe,IAAA,OAAAlC,EAAAyD,MAEAzD,EAAAsD,QACArC,KAAAE,IAAAe,IAAA,SAAAlC,EAAAsD,QAEAtD,EAAA6D,OACA5C,KAAAE,IAAAe,IAAA,QAAAlC,EAAA6D,OAEA5C,KAAAE,IAAA2C,QAAAC,eAGA4C,WAAA,SAAAC,GACA3F,KAAAjB,QAAAwG,QAAAI,EACA3F,KAAAE,IAAAI,KAAA,kBAAA+D,SACA,IAAAuB,EAAA,oCACA5F,KAAAjB,QAAAM,SAAAF,KAAA0G,OAAAD,GACA5F,KAAAjB,QAAAM,SAAAF,KAAAiB,SAAA,kBACAJ,KAAAjB,QAAAM,SAAAD,OAAAyG,OAAAD,GACA,SAAA5F,KAAAjB,QAAAS,OACAQ,KAAAE,IAAAI,KAAA,kBAAAiD,SAEAvD,KAAAE,IAAAI,KAAA,kBAAAyB,OAGA/B,KAAAjB,QAAAwG,QAAAO,aACA9F,KAAAjB,QAAAwG,QAAAQ,UAAA/F,OAKAgG,WAAA,WACA,OAAAhG,KAAAjB,QAAAwG,SAGAtB,aAAA,WACAjE,KAAAjB,QAAAM,SAAAF,KAAA6C,YAAA,kBACA,SAAAhC,KAAAjB,QAAAS,OACAQ,KAAAE,IAAAI,KAAA,kBAAAgE,QAAA,WACAtE,KAAAqE,YAGArE,KAAAE,IAAAI,KAAA,kBAAAuB,OACA7B,KAAAqE,iBAGArE,KAAAjB,QAAAwG,SAGAQ,UAAA,SAAAJ,GACA3F,KAAAjB,QAAAiF,OAAA2B,EACA3F,KAAAjB,QAAAiF,OAAAgC,cACAhG,KAAAjB,QAAAiF,OAAA0B,WAAA1F,OAIA8F,UAAA,WACA,OAAA9F,KAAAjB,QAAAiF,QAGAiC,MAAA,WACA,IAAAjF,EAAAhB,KACA4E,EAAA5E,KAAAE,IAAAC,SAAA,UAEA6E,EAAAhF,KAAAiF,eACAiB,EAAAlB,EAAAA,EAAA7E,SAAA,sBAAA6C,EAEAmD,EAAAC,YAAA,WACApF,EAAAd,IAAAmG,YAAA,UACArB,GACAA,EAAAqB,YAAA,kBAGA,KACAC,WAAA,WACAC,cAAAJ,GACAvB,GACA5D,EAAAd,IAAAE,SAAA,UAEA4E,GAAAkB,GACAlB,EAAA5E,SAAA,kBAGA,QA8CA,OAxCAnC,EAAAsB,OAAA,SAAAQ,EAAAhB,GACA,IAAAyH,EAAAxG,KAAAK,KAAAN,EAAA,gBAEAyG,GACAxG,KAAAK,KAAAN,EAAA,eAAAyG,EAAA,IAAA9H,EAAAqB,IAEA,iBAAA0G,QACAD,EAAAzH,MAKAT,EAAA,wBAAAoI,IAAA,SACApI,EAAA,wBAAAmD,GAAA,QAAA,WACA,IAAAkF,EAAArI,EAAA0B,MACA4G,GACA5H,cAEA2H,EAAAtG,KAAA,iBACAuG,EAAA1H,MAAAyH,EAAAtG,KAAA,gBAGAsG,EAAAtG,KAAA,iBACAuG,EAAA5H,UAAAE,MAAAyH,EAAAtG,KAAA,gBAGAsG,EAAAtG,KAAA,kBACAuG,EAAA5H,UAAAC,OAAA0H,EAAAtG,KAAA,iBAEAsG,EAAAtG,KAAA,WACAuG,EAAAC,MAAAF,EAAAtG,KAAA,iBAGA/B,EAAAqI,EAAAtG,KAAA,iBAAAd,OAAAqH,KAKArI,EAAAuI,SAAApI,GAEAD,EAAAC,OAAAA,IAEAd,EAAA,sCACA,wBACA,sBACA,uBACA,oBACA,uBACA,qBACA,oBACA,oBACA,qBACA,uBACA,YACA,YACA,SAAAC,EAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAE,EAAAC,GAGA,IAAAqI,EAAAhJ,EAAAiJ,QAAApI,SACAC,UAAA,gBAEAoI,KAAA,SAAAlI,GAIA,OAHAiB,KAAAvB,WACAM,EAAAA,MACAiB,KAAAkH,WAAAnI,GACAiB,MAGAmH,eAAA,SAAArF,GACA,IAAAsF,EAAA,KAOA,OANArJ,EAAAsJ,KAAArH,KAAAvB,QAAA,SAAAqG,EAAAvF,GACA+H,QAAAC,IAAAjE,WACA/D,EAAAuC,KAAAA,IACAsF,EAAA7H,KAGA6H,GAGAI,cAAA,SAAA7B,GACA,IAAA3E,EAAAhB,KACA0E,GAAA,EASA,OARA3G,EAAAsJ,KAAArH,KAAAvB,QAAA,SAAAqG,EAAAvF,GACAA,IAAAoG,IACAA,EAAA5B,QACA/C,EAAAvC,QAAAgJ,OAAA3C,EAAA,GACA9D,EAAA0G,gBACAhD,GAAA,KAGAA,GAGAiD,YAAA,SAAAhC,GACA3F,KAAAwH,cAAA7B,IAGA+B,cAAA,WAEA3J,EAAAsJ,KAAArH,KAAAvB,QAAA,SAAAqG,EAAAvF,GAEAA,EAAAsF,SAHA,IAGAC,MAIAZ,WAAA,SAAA0D,GAEA,IADA,IAAAC,EACAD,EAAA5B,cACA4B,EAAAA,EAAA5B,aAEAjI,EAAAsJ,KAAArH,KAAAvB,QAAA,SAAAqG,EAAAgD,GACAA,EAAAnD,WAAA,GACAmD,IAAAF,IACAC,EAAA/C,KAGA9E,KAAAvB,QAAAsJ,KAAA/H,KAAAvB,QAAAgJ,OAAAI,EAAA,GAAA,IACAD,EAAAjD,WAAA,GACA3E,KAAA0H,iBAIAjD,WAAA,SAAAlF,GACA,IAAAuI,EAAA9H,KAAAvB,QAAAgJ,OAAAzH,KAAAvB,QAAAuJ,QAAAzI,GAAA,GAAA,GAGA,OAFAS,KAAAvB,QAAAwJ,QAAAH,GACA9H,KAAA0H,iBACA,GAIAR,WAAA,SAAAnI,GACAiB,KAAAjB,QAAAA,EACAiB,KAAAX,YAEAW,KAAAjB,QAAAmJ,YACAlI,KAAAX,SAAA6I,UAAA5J,EAAA0B,KAAAjB,QAAAmJ,WACAlI,KAAAX,SAAA6I,UAAA9H,SAAA,iBAIAgC,aAAA,WACA,IAAAsC,EAIA,OAHA1E,KAAAX,UAAAW,KAAAX,SAAA6I,YACAxD,EAAA1E,KAAAX,SAAA6I,WAEAxD,GAGAP,eAAA,WACAnE,KAAAkE,WAAAlE,KAAAvB,QAAAuB,KAAAvB,QAAA8B,OAAA,KAGA4H,UAAA,SAAAC,GACA,IAAApH,EAAAhB,KA6CA,OA5CAoI,EAAAjD,aAAA1D,GAAA,UAAA,SAAAD,GACAR,EAAAkD,WAAAkE,KAEAA,EAAAjD,aAAA1D,GAAA,QAAA,WACAT,EAAAwG,cAAAY,GACAA,EAAAnD,gBACAmD,EAAAnD,eAAAZ,WAKA+D,EAAA3G,GAAA,cAAA,WACAT,EAAA0G,kBAGA1H,KAAAjB,QAAAmJ,YACAE,EAAArD,aAAAzG,EAAA,qCAAA8J,EAAAlD,WAAA,4CACAkD,EAAAnD,eAAA3E,KAAA,UAAAmB,GAAA,QAAA,SAAAD,GACA,IAAA+D,EAAA6C,EAAApC,aACAT,EAGAA,EAAAU,QAFAmC,EAAArE,UAMAqE,EAAAnD,eAAAxD,GAAA,QAAA,SAAAD,GACA,IAAA+D,EAAA6C,EAAApC,aACAT,EAMAA,EAAAU,SALAjF,EAAAkD,WAAAkE,GACAA,EAAAhD,aACA7F,OAAA8I,SAAA,EAAAD,EAAAjD,aAAAvB,WAAAtB,QAOAhE,EAAA0B,KAAAjB,QAAAmJ,WAAArC,OAAAuC,EAAAnD,iBAGAjF,KAAAvB,QAAAsJ,KAAAK,GACAA,EAAA/C,WAAArF,MACAA,KAAAkE,WAAAkE,GACAA,GAGAE,aAAA,SAAAC,GACA,IACAC,EAAAzK,EAAA0K,SAAAF,GACAvI,KAAAjB,QAAA2J,iBAAAF,EAAAG,WACAH,EAAAG,SAAA3I,KAAAjB,QAAA2J,gBAGA,IAAAE,EAAA,IAAAlK,EAAA8J,EAAAG,SAAAH,GAGA,OAAAxI,KAAAmI,UAAAS,MAOA,OAFAlK,EAAAqI,cAAAA,EAEAtI,EAAAsI,cAAAA,IAEAnJ,EAAA,6BACA,YACA,WACA,mBACA,SAAAa,GACA,OAAAA,IAEAb,EAAA,wBAAA,6BAAA,SAAAiL,GAAA,OAAAA","file":"../skylark-domx-windows.js","sourcesContent":["define('skylark-domx-windows/windows',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"domx.windows\",{\r\n\t});\r\n});\ndefine('skylark-domx-windows/Window',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",  \r\n  \"skylark-domx-interact/Movable\",\r\n  \"./windows\",  \r\n],function(skylark,langx,browser,datax,eventer,noder,geom,velm,$,plugins,Movable,windows){\r\n\r\n\r\n    var namespace = 'bsw';\r\n\r\n\r\n    var Window = plugins.Plugin.inherit({\r\n        klassName : \"Window\",\r\n\r\n        pluginName : \"domx.window\",\r\n\r\n        options : {\r\n            selectors: {\r\n                handle: '.window-header',\r\n                title: '.window-title',\r\n                body: '.window-body',\r\n                footer: '.window-footer'\r\n            },\r\n            elements: {\r\n                handle: null,\r\n                title: null,\r\n                body: null,\r\n                footer: null\r\n            },\r\n            references: {\r\n                body: $('body'),\r\n                window: $(window)\r\n            },\r\n            effect: 'fade',\r\n            parseHandleForTitle: true,\r\n            maximized: false,\r\n            maximizable: false,\r\n            title: 'No Title',\r\n            bodyContent: '',\r\n            footerContent: ''\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            this.overrided(elm,options);\r\n\r\n            options = this.options;\r\n\r\n            var _this = this;\r\n\r\n            this.$el = this.$();\r\n\r\n            if (!this.$el.hasClass('window')) {\r\n                this.$el.addClass('window');\r\n            }\r\n            this.$el.data('window', this);\r\n\r\n            if (this.$el.find(options.selectors.handle).length <= 0) {\r\n                this.$el.prepend('<div class=\"window-header\"><h4 class=\"window-title\"></h4></div>');\r\n            }\r\n\r\n\r\n            options.elements.handle = this.$el.find(options.selectors.handle);\r\n            options.elements.title = this.$el.find(options.selectors.title);\r\n            options.elements.body = this.$el.find(options.selectors.body);\r\n            options.elements.footer = this.$el.find(options.selectors.footer);\r\n            options.elements.title.html(options.title);\r\n\r\n            if (options.maximizable) {\r\n                options.elements.buttons = {};\r\n                options.elements.buttons.maximize = $('<button data-maximize=\"window\"><i class=\"glyphicon glyphicon-chevron-up\"></i></button>');\r\n                options.elements.handle.prepend(options.elements.buttons.maximize);\r\n                options.elements.buttons.restore = $('<button data-restore=\"window\"><i class=\"glyphicon glyphicon-modal-window\"></i></button>');\r\n                options.elements.handle.prepend(options.elements.buttons.restore);\r\n\r\n            }\r\n            if (_this.$el.find('[data-dismiss=window]').length <= 0) {\r\n                options.elements.handle.prepend('<button type=\"button\" class=\"close\" data-dismiss=\"window\" aria-hidden=\"true\"><i class=\"glyphicon glyphicon-remove\"></i></button>');\r\n            }\r\n            options.elements.body.html(options.bodyContent);\r\n            options.elements.footer.html(options.footerContent);\r\n\r\n            this.undock();\r\n\r\n            this.setSticky(options.sticky);\r\n\r\n            return this;\r\n        },\r\n\r\n        undock : function() {\r\n            var _this = this;\r\n            this.$el.css('visibility', 'hidden');\r\n            this.$el.appendTo('body');\r\n            this.centerWindow();\r\n            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n                this.options.references.window.bind('orientationchange resize', function(event) {\r\n                    _this.centerWindow();\r\n                });\r\n            }\r\n\r\n            this.$el.on('touchmove', function(e) {\r\n                e.stopPropagation();\r\n            });\r\n\r\n            this.initHandlers();\r\n            this.$el.hide();\r\n            if (this.options.id) {\r\n                this.id = this.options.id;\r\n            } else {\r\n                this.id = '';\r\n            }\r\n            this.show();\r\n        },\r\n\r\n        maximize : function() {\r\n            this.$el.removeClass('minimized');\r\n            this.$el.addClass('maximized');\r\n            this.state = \"maximized\";\r\n            var bottomOffset = 0;\r\n            if (this.options.window_manager) {\r\n                bottomOffset = this.options.window_manager.getContainer().height();\r\n            }\r\n            this.$el.css({\r\n                top: parseInt($('body').css('padding-top'), 10),\r\n                left: 0,\r\n                right: 0,\r\n                bottom: bottomOffset,\r\n                maxWidth: 'none',\r\n                width: 'auto',\r\n                height: 'auto'\r\n            });\r\n            this.$el.trigger(namespace + '.maximize');\r\n        },\r\n\r\n\r\n        restore : function() {\r\n            this.$el.removeClass('minimized');\r\n            this.$el.removeClass('maximized');\r\n            this.$el.removeAttr('style');\r\n            this.state = undefined;\r\n            this.$el.css({\r\n                top: this.window_info.top,\r\n                left: this.window_info.left,\r\n                width: this.window_info.width,\r\n                height: this.window_info.height\r\n            });\r\n            this.$el.removeProp('style');\r\n            this.$el.trigger(namespace + '.restore');\r\n        },\r\n\r\n        show : function(cb) {\r\n            var _this = this;\r\n            this.$el.css('visibility', 'visible');\r\n            var callbackHandler = function() {\r\n                _this.$el.trigger(namespace + '.show');\r\n                if (cb) {\r\n                    cb.call(_this, arguments);\r\n                }\r\n            };\r\n            if (this.options.effect === 'fade') {\r\n                this.$el.fadeIn(undefined, undefined, callbackHandler);\r\n            } else {\r\n                callbackHandler.call(this.$el);\r\n            }\r\n        },\r\n\r\n        setEffect : function(effect) {\r\n            this.options.effect = effect;\r\n        },\r\n\r\n        getEffect : function() {\r\n            return this.options.effect;\r\n        },\r\n\r\n        centerWindow : function() {\r\n            var top, left,\r\n                bodyTop = parseInt(this.options.references.body.position().top, 10) + parseInt(this.options.references.body.css('paddingTop'), 10),\r\n                maxHeight;\r\n            if (!this.options.sticky) {\r\n                left = (this.options.references.window.width() / 2) - (this.$el.width() / 2);\r\n                top = (this.options.references.window.height() / 2) - (this.$el.height() / 2);\r\n            } else {\r\n                left = (this.options.references.window.width() / 2) - (this.$el.width() / 2);\r\n                top = (this.options.references.window.height() / 2) - (this.$el.height() / 2);\r\n            }\r\n\r\n            if (top < bodyTop) {\r\n                top = bodyTop;\r\n            }\r\n            maxHeight = ((this.options.references.window.height() - bodyTop) - (parseInt(this.options.elements.handle.css('height'), 10) + parseInt(this.options.elements.footer.css('height'), 10))) - 45;\r\n            this.options.elements.body.css('maxHeight', maxHeight);\r\n\r\n            this.$el.css('left', left);\r\n            this.$el.css('top', top);\r\n            if (this.$el && this.$el.length > 0) {\r\n                this.window_info = {\r\n                    top: this.$el.position().top,\r\n                    left: this.$el.position().left,\r\n                    width: this.$el.outerWidth(),\r\n                    height: this.$el.outerHeight()\r\n                };\r\n            }\r\n            this.$el.trigger(namespace + '.centerWindow');\r\n        },\r\n\r\n        close : function(cb) {\r\n            var _this = this;\r\n            if (this.options.parent) {\r\n                this.options.parent.clearBlocker();\r\n                if (this.options.window_manager) {\r\n                    this.options.window_manager.setFocused(this.options.parent);\r\n                }\r\n            } else if (this.options.window_manager && this.options.window_manager.windows.length > 0) {\r\n                this.options.window_manager.setNextFocused();\r\n            }\r\n\r\n            var closeFn = function() {\r\n                _this.$el.trigger(namespace + '.close');\r\n                _this.$el.remove();\r\n                if (cb) {\r\n                    cb.call(_this);\r\n                }\r\n            };\r\n\r\n            if (this.options.effect === 'fade') {\r\n                this.$el.fadeOut(closeFn);\r\n            } else {\r\n                closeFn.call(_this.$el);\r\n            }\r\n\r\n            if (this.$windowTab) {\r\n                if (this.options.effect === 'fade') {\r\n                    this.$windowTab.fadeOut(400, function() {\r\n                        _this.$windowTab.remove();\r\n                    });\r\n                } else {\r\n                    this.$windowTab.hide();\r\n                    this.$windowTab.remove();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        on : function() {\r\n            this.$el.on.apply(this.$el, arguments);\r\n        },\r\n\r\n        sendToBack : function () {\r\n            var returnVal = false;\r\n            if (this.options.window_manager) {\r\n                returnVal = this.options.window_manager.sendToBack(this);\r\n            }\r\n            return returnVal;\r\n        },\r\n\r\n        setActive : function(active) {\r\n            if (active) {\r\n                this.$el.addClass('active');\r\n                if (this.$windowTab) {\r\n                    this.$windowTab.addClass('label-primary');\r\n                }\r\n                this.$el.trigger('active');\r\n            } else {\r\n                this.$el.removeClass('active');\r\n                if (this.$windowTab) {\r\n                    this.$windowTab.removeClass('label-primary');\r\n                    this.$windowTab.addClass('label-default');\r\n                }\r\n                this.$el.trigger('inactive');\r\n            }\r\n        },\r\n\r\n        setIndex : function(index) {\r\n            this.$el.css('zIndex', index);\r\n        },\r\n\r\n        setWindowTab : function(windowTab) {\r\n            this.$windowTab = windowTab;\r\n        },\r\n\r\n        getWindowTab : function() {\r\n            return this.$windowTab;\r\n        },\r\n\r\n        getTitle : function() {\r\n            return this.options.title;\r\n        },\r\n\r\n        getElement : function() {\r\n            return this.$el;\r\n        },\r\n\r\n        setSticky : function(sticky) {\r\n            this.options.sticky = sticky;\r\n            if (sticky === false) {\r\n                this.$el.css({\r\n                    'position': 'absolute'\r\n                });\r\n            } else {\r\n                this.$el.css({\r\n                    'position': 'fixed'\r\n                });\r\n            }\r\n        },\r\n\r\n        getSticky : function() {\r\n            return this.options.sticky;\r\n        },\r\n\r\n        setManager : function(window_manager) {\r\n            this.options.window_manager = window_manager;\r\n        },\r\n\r\n        initHandlers : function() {\r\n            var _this = this;\r\n            var title_buttons;\r\n\r\n            this.$el.find('[data-dismiss=window]').on('click', function(event) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                if (_this.options.blocker) {\r\n                    return;\r\n                }\r\n                _this.close();\r\n            });\r\n\r\n            this.$el.find('[data-maximize=window]').on('click', function(event) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                if (_this.options.blocker) {\r\n                    return;\r\n                }\r\n                _this.maximize();\r\n            });\r\n\r\n            this.$el.find('[data-restore=window]').on('click', function(event) {\r\n                if (_this.options.blocker) {\r\n                    return;\r\n                }\r\n                _this.restore();\r\n            });\r\n\r\n            this.moveable = new Movable(this.$el[0],{\r\n                handle : this.options.elements.title[0]\r\n            });\r\n\r\n            /*\r\n\r\n \r\n            this.$el.off('mousedown');\r\n            this.$el.on('mousedown', function() {\r\n                if (_this.options.blocker) {\r\n                    _this.options.blocker.getElement().trigger('focused');\r\n                    _this.options.blocker.blink();\r\n                    return;\r\n                } else {\r\n                    _this.$el.trigger('focused');\r\n                }\r\n\r\n                if (_this.$el.hasClass('ns-resize') || _this.$el.hasClass('ew-resize')) {\r\n                    $('body > *').addClass('disable-select');\r\n                    _this.resizing = true;\r\n                    _this.offset = {};\r\n                    _this.offset.x = event.pageX;\r\n                    _this.offset.y = event.pageY;\r\n                    _this.window_info = {\r\n                        top: _this.$el.position().top,\r\n                        left: _this.$el.position().left,\r\n                        width: _this.$el.outerWidth(),\r\n                        height: _this.$el.outerHeight()\r\n                    };\r\n\r\n                    if (event.offsetY < 5) {\r\n                        _this.$el.addClass('north');\r\n                    }\r\n                    if (event.offsetY > (_this.$el.height() - 5)) {\r\n                        _this.$el.addClass('south');\r\n                    }\r\n                    if (event.offsetX < 5) {\r\n                        _this.$el.addClass('west');\r\n                    }\r\n                    if (event.offsetX > (_this.$el.width() - 5)) {\r\n                        _this.$el.addClass('east');\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            _this.options.references.body.on('mouseup', function() {\r\n                _this.resizing = false;\r\n                $('body > *').removeClass('disable-select');\r\n                _this.$el.removeClass('west');\r\n                _this.$el.removeClass('east');\r\n                _this.$el.removeClass('north');\r\n                _this.$el.removeClass('south');\r\n\r\n            });\r\n            _this.options.elements.handle.off('mousedown');\r\n            _this.options.elements.handle.on('mousedown', function(event) {\r\n                if (_this.options.blocker) {\r\n                    return;\r\n                }\r\n                _this.moving = true;\r\n                _this.offset = {};\r\n                _this.offset.x = event.pageX - _this.$el.position().left;\r\n                _this.offset.y = event.pageY - _this.$el.position().top;\r\n                $('body > *').addClass('disable-select');\r\n            });\r\n            _this.options.elements.handle.on('mouseup', function(event) {\r\n                _this.moving = false;\r\n                $('body > *').removeClass('disable-select');\r\n            });\r\n\r\n\r\n            _this.options.references.body.on('mousemove', _this.$el, function(event) {\r\n                if (_this.moving && _this.state !== \"maximized\" &&\r\n                    (\r\n                        $(event.toElement).hasClass(_this.options.selectors.handle.replace('.', '')) ||\r\n                        $(event.toElement).hasClass(_this.options.selectors.title.replace('.', ''))\r\n                    )) {\r\n\r\n\r\n                    var top = _this.options.elements.handle.position().top,\r\n                        left = _this.options.elements.handle.position().left;\r\n                    _this.$el.css('top', event.pageY - _this.offset.y);\r\n                    _this.window_info.top = event.pageY - _this.offset.y;\r\n                    _this.$el.css('left', event.pageX - _this.offset.x);\r\n                    _this.window_info.left = event.pageX - _this.offset.x;\r\n                    _this.window_info.width = _this.$el.outerWidth();\r\n                    _this.window_info.height = _this.$el.outerHeight();\r\n                }\r\n                if (_this.options.resizable && _this.resizing) {\r\n                    if (_this.$el.hasClass(\"east\")) {\r\n                        _this.$el.css('width', event.pageX - _this.window_info.left);\r\n                    }\r\n                    if (_this.$el.hasClass(\"west\")) {\r\n\r\n                        _this.$el.css('left', event.pageX);\r\n                        _this.$el.css('width', _this.window_info.width + (_this.window_info.left - event.pageX));\r\n                    }\r\n                    if (_this.$el.hasClass(\"south\")) {\r\n                        _this.$el.css('height', event.pageY - _this.window_info.top);\r\n                    }\r\n                    if (_this.$el.hasClass(\"north\")) {\r\n                        _this.$el.css('top', event.pageY);\r\n                        _this.$el.css('height', _this.window_info.height + (_this.window_info.top - event.pageY));\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.$el.on('mousemove', function(event) {\r\n                if (_this.options.blocker) {\r\n                    return;\r\n                }\r\n                if (_this.options.resizable) {\r\n                    if (event.offsetY > (_this.$el.height() - 5) || event.offsetY < 5) {\r\n                        _this.$el.addClass('ns-resize');\r\n                    } else {\r\n                        _this.$el.removeClass('ns-resize');\r\n                    }\r\n                    if (event.offsetX > (_this.$el.width() - 5) || event.offsetX < 5) {\r\n                        _this.$el.addClass('ew-resize');\r\n\r\n                    } else {\r\n                        _this.$el.removeClass('ew-resize');\r\n                    }\r\n                }\r\n\r\n            });\r\n            */\r\n        },\r\n\r\n        resize : function(options) {\r\n            options = options || {};\r\n            if (options.top) {\r\n                this.$el.css('top', options.top);\r\n            }\r\n            if (options.left) {\r\n                this.$el.css('left', options.left);\r\n            }\r\n            if (options.height) {\r\n                this.$el.css('height', options.height);\r\n            }\r\n            if (options.width) {\r\n                this.$el.css('width', options.width);\r\n            }\r\n            this.$el.trigger(namespace + '.resize');\r\n        },\r\n\r\n        setBlocker : function(window_handle) {\r\n            this.options.blocker = window_handle;\r\n            this.$el.find('.disable-shade').remove();\r\n            var shade = '<div class=\"disable-shade\"></div>';\r\n            this.options.elements.body.append(shade);\r\n            this.options.elements.body.addClass('disable-scroll');\r\n            this.options.elements.footer.append(shade);\r\n            if (this.options.effect === 'fade') {\r\n                this.$el.find('.disable-shade').fadeIn();\r\n            } else {\r\n                this.$el.find('.disable-shade').show();\r\n            }\r\n\r\n            if (!this.options.blocker.getParent()) {\r\n                this.options.blocker.setParent(this);\r\n            }\r\n        },\r\n\r\n\r\n        getBlocker : function() {\r\n            return this.options.blocker;\r\n        },\r\n\r\n        clearBlocker : function() {\r\n            this.options.elements.body.removeClass('disable-scroll');\r\n            if (this.options.effect === 'fade') {\r\n                this.$el.find('.disable-shade').fadeOut(function() {\r\n                    this.remove();\r\n                });\r\n            } else {\r\n                this.$el.find('.disable-shade').hide();\r\n                this.remove();\r\n            }\r\n\r\n            delete this.options.blocker;\r\n        },\r\n\r\n        setParent : function(window_handle) {\r\n            this.options.parent = window_handle;\r\n            if (!this.options.parent.getBlocker()) {\r\n                this.options.parent.setBlocker(this);\r\n            }\r\n        },\r\n\r\n        getParent : function() {\r\n            return this.options.parent;\r\n        },\r\n\r\n        blink : function() {\r\n            var _this = this,\r\n                active = this.$el.hasClass('active'),\r\n\r\n                windowTab = this.getWindowTab(),\r\n                focused = windowTab ? windowTab.hasClass('label-primary') : undefined,\r\n\r\n                blinkInterval = setInterval(function() {\r\n                    _this.$el.toggleClass('active');\r\n                    if (windowTab) {\r\n                        windowTab.toggleClass('label-primary');\r\n                    }\r\n\r\n                }, 250),\r\n                blinkTimeout = setTimeout(function() {\r\n                    clearInterval(blinkInterval);\r\n                    if (active) {\r\n                        _this.$el.addClass('active');\r\n                    }\r\n                    if (windowTab && focused) {\r\n                        windowTab.addClass('label-primary');\r\n                    }\r\n\r\n                }, 1000);\r\n        }\r\n\r\n    });\r\n\r\n\r\n    datax.window = function(elm,options) {\r\n      var wgt  = this.data(elm,'sbswt.window');\r\n\r\n      if (!wgt) {\r\n        this.data(elm,'sbswt.window', (wgt = new Window(elm)));\r\n      }\r\n      if (typeof option == 'string') {\r\n        wgt[options]();\r\n      } \r\n   };\r\n\r\n\r\n    $('[data-window-target]').off('click');\r\n    $('[data-window-target]').on('click', function() {\r\n        var $this = $(this),\r\n            opts = {\r\n                selectors: {}\r\n            };\r\n        if ($this.data('windowTitle')) {\r\n            opts.title = $this.data('windowTitle');\r\n        }\r\n\r\n        if ($this.data('titleHandle')) {\r\n            opts.selectors.title = $this.data('titleHandle');\r\n        }\r\n\r\n        if ($this.data('windowHandle')) {\r\n            opts.selectors.handle = $this.data('windowHandle');\r\n        }\r\n        if ($this.data('clone')) {\r\n            opts.clone = $this.data('windowHandle');\r\n        }\r\n\r\n        $($this.data('windowTarget')).window(opts);\r\n    });\r\n\r\n\r\n\r\n    plugins.register(Window);\r\n\r\n    return windows.Window = Window;\r\n});\ndefine('skylark-domx-windows/WindowManager',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./windows\",\r\n  \"./Window\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,velm,$,plugins,windows,Window){\r\n\r\n\r\n    var WindowManager = langx.Emitter.inherit({\r\n        klassName: \"WindowManager\",\r\n\r\n        init : function(options) {\r\n            this.windows = [];\r\n            options = options || {};\r\n            this.initialize(options);\r\n            return this;\r\n        },\r\n\r\n        findWindowByID : function(id) {\r\n            var returnValue = null;\r\n            langx.each(this.windows, function(index, window) {\r\n                console.log(arguments);\r\n                if (window.id === id) {\r\n                    returnValue = window;\r\n                }\r\n            });\r\n            return returnValue;\r\n        },\r\n\r\n        destroyWindow : function(window_handle) {\r\n            var _this = this;\r\n            var returnVal = false;\r\n            langx.each(this.windows, function(index, window) {\r\n                if (window === window_handle) {\r\n                    window_handle.close();\r\n                    _this.windows.splice(index, 1);\r\n                    _this.resortWindows();\r\n                    returnVal = true;\r\n                }\r\n            });\r\n            return returnVal;\r\n        },\r\n\r\n        closeWindow : function(window_handle) {\r\n            this.destroyWindow(window_handle);\r\n        },\r\n\r\n        resortWindows : function() {\r\n            var startZIndex = 900;\r\n            langx.each(this.windows, function(index, window) {\r\n\r\n                window.setIndex(startZIndex + index);\r\n            });\r\n        },\r\n\r\n        setFocused : function(focused_window) {\r\n            var focusedWindowIndex;\r\n            while (focused_window.getBlocker()) {\r\n                focused_window = focused_window.getBlocker();\r\n            }\r\n            langx.each(this.windows, function(index, windowHandle) {\r\n                windowHandle.setActive(false);\r\n                if (windowHandle === focused_window) {\r\n                    focusedWindowIndex = index;\r\n                }\r\n            });\r\n            this.windows.push(this.windows.splice(focusedWindowIndex, 1)[0]);\r\n            focused_window.setActive(true);\r\n            this.resortWindows();\r\n\r\n        },\r\n\r\n        sendToBack : function(window) {\r\n            var windowHandle = this.windows.splice(this.windows.indexOf(window), 1)[0];\r\n            this.windows.unshift(windowHandle);\r\n            this.resortWindows();\r\n            return true;\r\n        },\r\n\r\n\r\n        initialize : function(options) {\r\n            this.options = options;\r\n            this.elements = {};\r\n\r\n            if (this.options.container) {\r\n                this.elements.container = $(this.options.container);\r\n                this.elements.container.addClass('window-pane');\r\n            }\r\n        },\r\n\r\n        getContainer : function() {\r\n            var returnVal;\r\n            if (this.elements && this.elements.container) {\r\n                returnVal = this.elements.container;\r\n            }\r\n            return returnVal;\r\n        },\r\n\r\n        setNextFocused : function() {\r\n            this.setFocused(this.windows[this.windows.length - 1]);\r\n        },\r\n\r\n        addWindow : function(window_object) {\r\n            var _this = this;\r\n            window_object.getElement().on('focused', function(event) {\r\n                _this.setFocused(window_object);\r\n            });\r\n            window_object.getElement().on('close', function() {\r\n                _this.destroyWindow(window_object);\r\n                if (window_object.getWindowTab()) {\r\n                    window_object.getWindowTab().remove();\r\n                }\r\n\r\n            });\r\n\r\n            window_object.on('bsw.restore', function() {\r\n                _this.resortWindows();\r\n            });\r\n\r\n            if (this.options.container) {\r\n                window_object.setWindowTab($('<span class=\"label label-default\">' + window_object.getTitle() + '<button class=\"close\">x</button></span>'));\r\n                window_object.getWindowTab().find('.close').on('click', function(event) {\r\n                    var blocker = window_object.getBlocker();\r\n                    if (!blocker) {\r\n                        window_object.close();\r\n                    } else {\r\n                        blocker.blink();\r\n                    }\r\n\r\n                });\r\n                window_object.getWindowTab().on('click', function(event) {\r\n                    var blocker = window_object.getBlocker();\r\n                    if (!blocker) {\r\n                        _this.setFocused(window_object);\r\n                        if (window_object.getSticky()) {\r\n                            window.scrollTo(0, window_object.getElement().position().top);\r\n                        }\r\n                    } else {\r\n                        blocker.blink();\r\n                    }\r\n                });\r\n\r\n                $(this.options.container).append(window_object.getWindowTab());\r\n            }\r\n\r\n            this.windows.push(window_object);\r\n            window_object.setManager(this);\r\n            this.setFocused(window_object);\r\n            return window_object;\r\n        },\r\n\r\n        createWindow : function(window_options) {\r\n            var _this = this;\r\n            var final_options = langx.mixin({},window_options);\r\n            if (this.options.windowTemplate && !final_options.template) {\r\n                final_options.template = this.options.windowTemplate;\r\n            }\r\n\r\n            var newWindow = new Window(final_options.template,final_options);\r\n\r\n\r\n            return this.addWindow(newWindow);\r\n        }\r\n\r\n    });\r\n\r\n    Window.WindowManager = WindowManager;\r\n\r\n    return windows.WindowManager = WindowManager;\r\n});\ndefine('skylark-domx-windows/main',[\r\n\t\"./windows\",\r\n    \"./Window\",\r\n    \"./WindowManager\"\r\n], function(windows) {\r\n    return windows;\r\n});\ndefine('skylark-domx-windows', ['skylark-domx-windows/main'], function (main) { return main; });\n\n"]}